plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id "org.sonarqube" version "6.0.1.5171"
    id 'jacoco'
}

group = 'com.example'
version = 'v.1.1.9'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot con WebFlux y MongoDB Reactivo
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Validación
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok (solo en compilación)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // SpringDoc OpenAPI para WebFlux
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.3.0'

    // RabbitMq
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Dependencias para pruebas
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Spring REST Docs para WebFlux
    testImplementation 'org.springframework.restdocs:spring-restdocs-webtestclient'

}


sonar {
    properties {
        property "sonar.projectKey", "SergioAyalaHernandez_bank-ms-webflux-transaction"
        property "sonar.organization", "bank-ms-webflux-transaction"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.10"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}